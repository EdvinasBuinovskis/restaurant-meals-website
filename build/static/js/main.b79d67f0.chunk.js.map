{"version":3,"sources":["components/LoadingBox.js","components/MessageBox.js","components/Restaurant.js","redux/constants/restaurantConstants.js","redux/actions/restaurantActions.js","components/Search.js","screens/RestaurantListScreen.js","components/Meal.js","redux/constants/mealConstants.js","redux/actions/mealActions.js","screens/RestaurantScreen.js","screens/RestaurantCreateScreen.js","screens/RestaurantEditScreen.js","screens/MealListScreen.js","components/Activity.js","redux/constants/favoriteConstant.js","redux/actions/favoriteActions.js","components/Favorite.js","components/Approve.js","screens/MealScreen.js","screens/MealCreateScreen.js","screens/MealEditScreen.js","redux/constants/userConstants.js","screens/SigninScreen.js","redux/actions/userActions.js","screens/RegisterScreen.js","screens/UserMealScreen.js","screens/FavoritesScreen.js","components/PrivateRoute.js","components/PublicRoute.js","components/AdminRoute.js","components/HeaderMDB.js","App.js","redux/store.js","redux/reducers/mealReducers.js","redux/reducers/restaurantReducers.js","redux/reducers/userReducers.js","redux/reducers/favoriteReducers.js","serviceWorker.js","index.js"],"names":["LoadingBox","icon","faSpinner","spin","MessageBox","props","className","variant","children","Restaurant","restaurant","to","_id","style","maxWidth","rippleColor","rippleTag","src","image","fluid","alt","position","backgroundColor","color","name","RESTAURANT_LIST_REQUEST","RESTAURANT_LIST_SUCCESS","RESTAURANT_LIST_FAIL","RESTAURANT_DETAILS_REQUEST","RESTAURANT_DETAILS_SUCCESS","RESTAURANT_DETAILS_FAIL","RESTAURANT_CREATE_REQUEST","RESTAURANT_CREATE_SUCCESS","RESTAURANT_CREATE_FAIL","RESTAURANT_CREATE_RESET","RESTAURANT_UPDATE_REQUEST","RESTAURANT_UPDATE_SUCCESS","RESTAURANT_UPDATE_FAIL","RESTAURANT_UPDATE_RESET","RESTAURANT_DELETE_REQUEST","RESTAURANT_DELETE_SUCCESS","RESTAURANT_DELETE_FAIL","RESTAURANT_DELETE_RESET","listRestaurants","dispatch","a","type","Axios","get","data","payload","message","detailsRestaurant","restaurantId","response","Search","searchTerm","setSearchTerm","md","placeholder","aria-label","value","onChange","e","target","RestaurantListScreen","useDispatch","restaurantList","useSelector","state","loading","error","restaurants","userInfo","userSignin","useState","useEffect","isAdmin","Button","href","filter","restaurantName","toLowerCase","termToLow","includes","map","Meal","meal","ListGroupItem","tag","action","approved","size","MEAL_LIST_REQUEST","MEAL_LIST_SUCCESS","MEAL_LIST_FAIL","MEAL_DETAILS_REQUEST","MEAL_DETAILS_SUCCESS","MEAL_DETAILS_FAIL","MEAL_CREATE_REQUEST","MEAL_CREATE_SUCCESS","MEAL_CREATE_FAIL","MEAL_CREATE_RESET","MEAL_UPDATE_REQUEST","MEAL_UPDATE_SUCCESS","MEAL_UPDATE_FAIL","MEAL_UPDATE_RESET","MEAL_DELETE_REQUEST","MEAL_DELETE_SUCCESS","MEAL_DELETE_FAIL","MEAL_DELETE_RESET","MEAL_APPROVE_REQUEST","MEAL_APPROVE_SUCCESS","MEAL_APPROVE_FAIL","listMeals","detailsMeal","mealId","RestaurantScreen","match","params","id","restaurantDetails","mealList","loadingList","errorList","meals","successDelete","restaurantDelete","success","history","push","deleteHandler","window","confirm","getState","delete","headers","Authorization","token","deleteRestaurant","onClick","Jumbotron","Container","top","maxHeight","description","ListGroup","obj","restaurant_id","RestaurantCreateScreen","setName","setImage","setDescription","restaurantCreate","loadingUpload","setLoadingUpload","errorUpload","setErrorUpload","uploadFileHandler","file","files","bodyFormData","FormData","append","post","offset","Form","onSubmit","preventDefault","FormGroup","row","Col","Label","for","sm","Input","required","label","check","RestaurantEditScreen","restaurantUpdate","loadingUpdate","errorUpdate","successUpdate","put","updateRestaurant","mealName","Activity","kcal","dropdownOpen","setDropdownOpen","activity","setActivity","weight","setWeight","minutes","setMinutes","minOrH","setMinOrH","metValues","activityName","met","Card","CardBody","CardTitle","CardText","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","kcalPerMin","activityMin","Math","round","hours","floor","FAVORITE_LIST_REQUEST","FAVORITE_LIST_SUCCESS","FAVORITE_LIST_FAIL","FAVORITE_CREATE_REQUEST","FAVORITE_CREATE_SUCCESS","FAVORITE_CREATE_FAIL","FAVORITE_DELETE_REQUEST","FAVORITE_DELETE_SUCCESS","FAVORITE_DELETE_FAIL","listFavorites","Favorite","favoriteList","favorites","isFavorite","setFavorite","addFavorite","favorite","removeFavorite","mealApprove","isApproved","setApproved","updateApproved","approveMeal","MealScreen","mealDetails","mealDelete","deleteMeal","createdBy","center","width","flush","protein","fat","carbohydrates","MealCreateScreen","setRestaurantId","setKcal","setProtein","setFat","setCarbohydrates","servingWeight","setServingWeight","mealCreate","createMeal","step","MealEditScreen","mealUpdate","updateMeal","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","LoginScreen","username","setUsername","password","setPassword","redirect","location","search","split","localStorage","setItem","JSON","stringify","signin","plaintext","RegisterScreen","email","setEmail","confirmPassword","setConfirmPassword","userRegister","alert","register","UserMealScreen","filterUserMeals","console","log","FavoriteScreen","filterFavoriteMeals","PrivateRoute","Component","component","rest","render","PublicRoute","AdminRoute","App","setIsOpen","expand","light","bgColor","NavbarToggler","Collapse","navbar","right","active","aria-current","removeItem","exact","path","MealListScreen","SigninScreen","FavoritesScreen","initialState","getItem","parse","reducer","combineReducers","userDetails","user","favoriteCreate","favoriteDelete","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b79d67f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function LoadingBox() {\r\n    return (\r\n        <div>\r\n            <FontAwesomeIcon icon={faSpinner} spin /> Loading...\r\n        </div>\r\n    );\r\n}","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\n\r\nexport default function MessageBox(props) {\r\n    return (\r\n        <div className={`alert alert-${props.variant || 'info'}`}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}","/* eslint-disable react/prop-types */\r\n// import React from 'react'\r\n// import { Link } from 'react-router-dom';\r\n// import { Card, CardBody, CardTitle } from 'reactstrap'\r\n\r\n// export default function Restaurant(props) {\r\n//     const { restaurant } = props;\r\n//     return (\r\n//         <div key={restaurant._id}>\r\n//             <Link to={`/restaurants/${restaurant._id}`}>\r\n//                 <Card>\r\n//                     {/* <CardImg top src={restaurant.image} alt=\"Failed to load image :/\" /> */}\r\n//                     <img src={restaurant.image} alt=\"Failed to load image :/\" width=\"300\" height=\"300\"></img>\r\n//                     <CardBody>\r\n//                         <CardTitle>{restaurant.name}</CardTitle>\r\n//                     </CardBody>\r\n//                 </Card>\r\n//             </Link>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nimport React from 'react';\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardImage, MDBRipple, MDBCol } from 'mdb-react-ui-kit';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Restaurant(props) {\r\n    const { restaurant } = props;\r\n    return (\r\n        <MDBCol key={restaurant._id}>\r\n            <Link to={`/restaurants/${restaurant._id}`}>\r\n                <MDBCard style={{ maxWidth: '22rem' }} className='h-100'>\r\n                    <MDBRipple rippleColor='light' rippleTag='div' className='bg-image hover-overlay'>\r\n                        <MDBCardImage src={restaurant.image} fluid alt=\"Failed to load image :/\" position=\"top\" />\r\n                        <a>\r\n                            <div className='mask' style={{ backgroundColor: 'rgba(251, 251, 251, 0.15)' }}></div>\r\n                        </a>\r\n                    </MDBRipple>\r\n                    <MDBCardBody>\r\n                        <MDBCardTitle color=\"black\">{restaurant.name}</MDBCardTitle>\r\n                    </MDBCardBody>\r\n                </MDBCard>\r\n            </Link>\r\n        </MDBCol>\r\n\r\n    );\r\n}\r\n","export const RESTAURANT_LIST_REQUEST = 'RESTAURANT_LIST_REQUEST';\r\nexport const RESTAURANT_LIST_SUCCESS = 'RESTAURANT_LIST_SUCCESS';\r\nexport const RESTAURANT_LIST_FAIL = 'RESTAURANT_LIST_FAIL';\r\n\r\nexport const RESTAURANT_DETAILS_REQUEST = 'RESTAURANT_DETAILS_REQUEST';\r\nexport const RESTAURANT_DETAILS_SUCCESS = 'RESTAURANT_DETAILS_SUCCESS';\r\nexport const RESTAURANT_DETAILS_FAIL = 'RESTAURANT_DETAILS_FAIL';\r\n\r\nexport const RESTAURANT_CREATE_REQUEST = 'RESTAURANT_CREATE_REQUEST';\r\nexport const RESTAURANT_CREATE_SUCCESS = 'RESTAURANT_CREATE_SUCCESS';\r\nexport const RESTAURANT_CREATE_FAIL = 'RESTAURANT_CREATE_FAIL';\r\nexport const RESTAURANT_CREATE_RESET = 'RESTAURANT_CREATE_RESET';\r\n\r\nexport const RESTAURANT_UPDATE_REQUEST = 'RESTAURANT_UPDATE_REQUEST';\r\nexport const RESTAURANT_UPDATE_SUCCESS = 'RESTAURANT_UPDATE_SUCCESS';\r\nexport const RESTAURANT_UPDATE_FAIL = 'RESTAURANT_UPDATE_FAIL';\r\nexport const RESTAURANT_UPDATE_RESET = 'RESTAURANT_UPDATE_RESET';\r\n\r\nexport const RESTAURANT_DELETE_REQUEST = 'RESTAURANT_DELETE_REQUEST';\r\nexport const RESTAURANT_DELETE_SUCCESS = 'RESTAURANT_DELETE_SUCCESS';\r\nexport const RESTAURANT_DELETE_FAIL = 'RESTAURANT_DELETE_FAIL';\r\nexport const RESTAURANT_DELETE_RESET = 'RESTAURANT_DELETE_RESET';\r\n","import Axios from \"axios\";\r\nimport { RESTAURANT_CREATE_FAIL, RESTAURANT_CREATE_REQUEST, RESTAURANT_CREATE_SUCCESS, RESTAURANT_DELETE_FAIL, RESTAURANT_DELETE_REQUEST, RESTAURANT_DELETE_SUCCESS, RESTAURANT_DETAILS_FAIL, RESTAURANT_DETAILS_REQUEST, RESTAURANT_DETAILS_SUCCESS, RESTAURANT_LIST_FAIL, RESTAURANT_LIST_REQUEST, RESTAURANT_LIST_SUCCESS, RESTAURANT_UPDATE_FAIL, RESTAURANT_UPDATE_REQUEST, RESTAURANT_UPDATE_SUCCESS } from '../constants/restaurantConstants';\r\n\r\nexport const listRestaurants = () => async (dispatch) => {\r\n    dispatch({\r\n        type: RESTAURANT_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await Axios.get('/api/restaurants');\r\n        dispatch({ type: RESTAURANT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: RESTAURANT_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const detailsRestaurant = (restaurantId) => async (dispatch) => {\r\n    dispatch({ type: RESTAURANT_DETAILS_REQUEST, payload: restaurantId });\r\n    try {\r\n        const { data } = await Axios.get(`/api/restaurants/${restaurantId}`);\r\n        dispatch({ type: RESTAURANT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: RESTAURANT_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\n\r\nexport const createRestaurant = (restaurant) => async (dispatch, getState) => {\r\n    dispatch({ type: RESTAURANT_CREATE_REQUEST, payload: restaurant });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.post('/api/restaurants', restaurant, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({ type: RESTAURANT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: RESTAURANT_CREATE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const updateRestaurant = (restaurant) => async (dispatch, getState) => {\r\n    dispatch({ type: RESTAURANT_UPDATE_REQUEST, payload: restaurant });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/restaurants/${restaurant._id}`, restaurant, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({ type: RESTAURANT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: RESTAURANT_UPDATE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const deleteRestaurant = (restaurantId) => async (dispatch, getState) => {\r\n    dispatch({ type: RESTAURANT_DELETE_REQUEST, payload: restaurantId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        // eslint-disable-next-line no-unused-vars\r\n        const { data } = await Axios.delete(`/api/restaurants/${restaurantId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({ type: RESTAURANT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({ type: RESTAURANT_DELETE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\n// import { Form, FormGroup, Input, Label } from 'reactstrap'\r\nimport { MDBCol, MDBIcon } from \"mdb-react-ui-kit\";\r\n\r\nexport default function Search({ searchTerm, setSearchTerm }) {\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <Form>\r\n    //             <FormGroup>\r\n    //                 <Label for=\"mealSearch\">Search</Label>\r\n    //                 <Input\r\n    //                     value={searchTerm}\r\n    //                     onChange={e => setSearchTerm(e.target.value)}\r\n    //                     type=\"search\"\r\n    //                     name=\"search\"\r\n    //                     id=\"mealSearch\"\r\n    //                     placeholder=\"Enter search term\"\r\n    //                 />\r\n    //             </FormGroup>\r\n    //         </Form>\r\n    //     </div>\r\n    // )\r\n\r\n    return (\r\n        <MDBCol md=\"6\">\r\n            <form className=\"form-inline mt-4 mb-4\">\r\n                <MDBIcon icon=\"search\" />\r\n                <input className=\"form-control form-control-sm ml-3 w-75\" type=\"text\" placeholder=\"Paieška\" aria-label=\"Search\"\r\n                    value={searchTerm}\r\n                    onChange={e => setSearchTerm(e.target.value)} />\r\n            </form>\r\n        </MDBCol>\r\n\r\n    );\r\n}\r\n\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Restaurant from '../components/Restaurant';\r\nimport { listRestaurants } from '../redux/actions/restaurantActions';\r\nimport Search from '../components/Search';\r\nimport { Button } from 'reactstrap';\r\nimport { MDBRow, MDBCol, MDBCardGroup } from 'mdb-react-ui-kit';\r\n\r\nexport default function RestaurantListScreen() {\r\n    const dispatch = useDispatch();\r\n    const restaurantList = useSelector(state => state.restaurantList);\r\n    const { loading, error, restaurants } = restaurantList;\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const filterRestaurants = () => {\r\n        if (searchTerm === '') {\r\n            return restaurants;\r\n        }\r\n\r\n        return restaurants.filter((restaurant) => {\r\n            const restaurantName = restaurant.name.toLowerCase();\r\n            const termToLow = searchTerm.toLowerCase();\r\n            return restaurantName.includes(termToLow);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(listRestaurants());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<LoadingBox></LoadingBox>) :\r\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                    (\r\n                        <div>\r\n                            <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n                            {\r\n                                userInfo ? (\r\n                                    <div>\r\n                                        {userInfo.isAdmin ? (\r\n                                            <Button href=\"/restaurants/add\">Add</Button>\r\n                                        ) : (\r\n                                            <div></div>\r\n                                        )}\r\n                                    </div>\r\n                                ) : (\r\n                                    <div></div>\r\n                                )\r\n                            }\r\n                            <MDBCardGroup>\r\n                                <div className=\"row center\">\r\n                                    {filterRestaurants().map(restaurant => (\r\n                                        <Restaurant key={restaurant._id} restaurant={restaurant}></Restaurant>\r\n                                    ))}\r\n                                </div>\r\n                            </MDBCardGroup>\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable react/prop-types */\r\nimport { MDBIcon } from 'mdb-react-ui-kit';\r\nimport React from 'react';\r\nimport { ListGroupItem } from 'reactstrap';\r\n\r\nexport default function Meal(props) {\r\n    const { meal } = props;\r\n    return (\r\n        <div key={meal._id}>\r\n            <ListGroupItem tag=\"a\" href={`/meals/${meal._id}`} action>\r\n                {meal.name}\r\n                {meal.approved ? <MDBIcon className='ms-1' icon='check' size='sm' /> :\r\n                    <div></div>\r\n                }\r\n            </ListGroupItem>\r\n        </div>\r\n    )\r\n}\r\n","export const MEAL_LIST_REQUEST = 'MEAL_LIST_REQUEST';\r\nexport const MEAL_LIST_SUCCESS = 'MEAL_LIST_SUCCESS';\r\nexport const MEAL_LIST_FAIL = 'MEAL_LIST_FAIL';\r\n\r\nexport const MEAL_DETAILS_REQUEST = 'MEAL_DETAILS_REQUEST';\r\nexport const MEAL_DETAILS_SUCCESS = 'MEAL_DETAILS_SUCCESS';\r\nexport const MEAL_DETAILS_FAIL = 'MEAL_DETAILS_FAIL';\r\n\r\nexport const MEAL_CREATE_REQUEST = 'MEAL_CREATE_REQUEST';\r\nexport const MEAL_CREATE_SUCCESS = 'MEAL_CREATE_SUCCESS';\r\nexport const MEAL_CREATE_FAIL = 'MEAL_CREATE_FAIL';\r\nexport const MEAL_CREATE_RESET = 'MEAL_CREATE_RESET';\r\n\r\nexport const MEAL_UPDATE_REQUEST = 'MEAL_UPDATE_REQUEST';\r\nexport const MEAL_UPDATE_SUCCESS = 'MEAL_UPDATE_SUCCESS';\r\nexport const MEAL_UPDATE_FAIL = 'MEAL_UPDATE_FAIL';\r\nexport const MEAL_UPDATE_RESET = 'MEAL_UPDATE_RESET';\r\n\r\nexport const MEAL_DELETE_REQUEST = 'MEAL_DELETE_REQUEST';\r\nexport const MEAL_DELETE_SUCCESS = 'MEAL_DELETE_SUCCESS';\r\nexport const MEAL_DELETE_FAIL = 'MEAL_DELETE_FAIL';\r\nexport const MEAL_DELETE_RESET = 'MEAL_DELETE_RESET';\r\n\r\nexport const MEAL_APPROVE_REQUEST = 'MEAL_APPROVE_REQUEST';\r\nexport const MEAL_APPROVE_SUCCESS = 'MEAL_APPROVE_SUCCESS';\r\nexport const MEAL_APPROVE_FAIL = 'MEAL_APPROVE_FAIL';\r\n","import Axios from \"axios\";\r\nimport { MEAL_APPROVE_FAIL, MEAL_APPROVE_REQUEST, MEAL_APPROVE_SUCCESS, MEAL_CREATE_FAIL, MEAL_CREATE_REQUEST, MEAL_CREATE_SUCCESS, MEAL_DELETE_FAIL, MEAL_DELETE_REQUEST, MEAL_DELETE_SUCCESS, MEAL_DETAILS_FAIL, MEAL_DETAILS_REQUEST, MEAL_DETAILS_SUCCESS, MEAL_LIST_FAIL, MEAL_LIST_REQUEST, MEAL_LIST_SUCCESS, MEAL_UPDATE_FAIL, MEAL_UPDATE_REQUEST, MEAL_UPDATE_SUCCESS } from '../constants/mealConstants';\r\n\r\nexport const listMeals = () => async (dispatch) => {\r\n    dispatch({ type: MEAL_LIST_REQUEST });\r\n    try {\r\n        const { data } = await Axios.get('/api/meals');\r\n        dispatch({ type: MEAL_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: MEAL_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const detailsMeal = (mealId) => async (dispatch) => {\r\n    dispatch({ type: MEAL_DETAILS_REQUEST, payload: mealId });\r\n    try {\r\n        const { data } = await Axios.get(`/api/meals/${mealId}`);\r\n        dispatch({ type: MEAL_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: MEAL_DETAILS_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const createMeal = (name, restaurant_id, kcal, protein, fat, carbohydrates, servingWeight, createdBy, image) => async (dispatch, getState) => {\r\n    dispatch({ type: MEAL_CREATE_REQUEST, payload: { name, restaurant_id, kcal, protein, fat, carbohydrates, servingWeight, createdBy, image } });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.post('/api/meals', { name, restaurant_id, kcal, protein, fat, carbohydrates, servingWeight, createdBy, image }, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({ type: MEAL_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: MEAL_CREATE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const updateMeal = (meal) => async (dispatch, getState) => {\r\n    dispatch({ type: MEAL_UPDATE_REQUEST, payload: meal });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/meals/${meal._id}`, meal, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({ type: MEAL_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: MEAL_UPDATE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const deleteMeal = (mealId) => async (dispatch, getState) => {\r\n    dispatch({ type: MEAL_DELETE_REQUEST, payload: mealId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        // eslint-disable-next-line no-unused-vars\r\n        const { data } = await Axios.delete(`/api/meals/${mealId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({ type: MEAL_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({ type: MEAL_DELETE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const approveMeal = (mealId) => async (dispatch, getState) => {\r\n    dispatch({ type: MEAL_APPROVE_REQUEST, payload: mealId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        //body is not used\r\n        // eslint-disable-next-line no-unused-vars\r\n        const { data } = await Axios.put(`/api/meals/${mealId}/changeApprove`, \"approve\", {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({ type: MEAL_APPROVE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({ type: MEAL_APPROVE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Jumbotron, ListGroup } from 'reactstrap';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport Meal from '../components/Meal';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { listMeals } from '../redux/actions/mealActions';\r\nimport { detailsRestaurant, deleteRestaurant } from '../redux/actions/restaurantActions';\r\n\r\nexport default function RestaurantScreen(props) {\r\n    const dispatch = useDispatch();\r\n    const restaurantId = props.match.params.id;\r\n    const restaurantDetails = useSelector(state => state.restaurantDetails);\r\n    const { loading, error, restaurant } = restaurantDetails;\r\n\r\n\r\n    const mealList = useSelector(state => state.mealList);\r\n    const { loading: loadingList, error: errorList, meals: meals } = mealList;\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n\r\n    const restaurantDelete = useSelector(state => state.restaurantDelete);\r\n    const { success: successDelete } = restaurantDelete;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsRestaurant(restaurantId));\r\n        dispatch(listMeals());\r\n    }, [dispatch, restaurantId]);\r\n\r\n    useEffect(() => {\r\n        if (successDelete)\r\n            props.history.push(`/restaurants`)\r\n    }, [successDelete]);\r\n\r\n    // const mealsFiltered = meals.filter(obj => obj.company === restaurant.company);\r\n    // console.log(\"meals: \", meals);\r\n\r\n    const deleteHandler = () => {\r\n        if (window.confirm('Are you sure you want to delete?')) {\r\n            dispatch(deleteRestaurant(restaurantId));\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<LoadingBox></LoadingBox>) :\r\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                    (\r\n                        <div>\r\n                            <div>\r\n                                {\r\n                                    userInfo ? (\r\n                                        <div>\r\n                                            {userInfo.isAdmin ? (\r\n                                                <div>\r\n                                                    <Button href={`/restaurants/${restaurant._id}/edit`} >Edit</Button>\r\n                                                    <Button onClick={() => deleteHandler()}>Delete</Button>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <div></div>\r\n                                            )}\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div></div>\r\n                                    )\r\n                                }\r\n                                <Jumbotron fluid>\r\n                                    <Container fluid>\r\n                                        <img top src={restaurant.image} alt=\"failed to load photo :/\" style={{ maxWidth: '22rem', maxHeight: '22rem' }}></img>\r\n                                        <h1 className=\"display-3\">{restaurant.name}</h1>\r\n                                        <p className=\"lead\">{restaurant.description}</p>\r\n                                    </Container>\r\n                                </Jumbotron>\r\n                            </div>\r\n                            {loadingList ? (<LoadingBox></LoadingBox>) :\r\n                                errorList ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                                    (\r\n                                        <div>\r\n                                            <ListGroup>\r\n                                                {meals.filter(obj => obj.restaurant_id === restaurant._id).map(meal => (\r\n                                                    <Meal key={meal._id} meal={meal}></Meal>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        </div>\r\n                                    )}\r\n                        </div>\r\n                    )}\r\n\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createRestaurant } from '../redux/actions/restaurantActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Button, Col, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport Axios from 'axios';\r\n\r\nexport default function RestaurantCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const restaurantCreate = useSelector(state => state.restaurantCreate);\r\n    const { success, error, loading } = restaurantCreate;\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [loadingUpload, setLoadingUpload] = useState(false);\r\n    const [errorUpload, setErrorUpload] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            props.history.push('/restaurants');\r\n        }\r\n    }, [dispatch, success]);\r\n\r\n    const createHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createRestaurant({\r\n            name,\r\n            image,\r\n            description\r\n        }));\r\n    };\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('image', file);\r\n        setLoadingUpload(true);\r\n        try {\r\n            const { data } = await Axios.post('/api/uploads', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            });\r\n            setImage(data);\r\n            setLoadingUpload(false);\r\n        } catch (error) {\r\n            setErrorUpload(error.message);\r\n            setLoadingUpload(false);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div md={{ size: 4, offset: 1 }}>\r\n            <Form onSubmit={createHandler}>\r\n                <FormGroup row>\r\n                    <Col md={{ size: 4, offset: 1 }}>\r\n                        <Label>Pridėti naują restoraną</Label>\r\n                    </Col>\r\n                </FormGroup>\r\n                {loading && <LoadingBox></LoadingBox>}\r\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                <FormGroup row>\r\n                    <Label for=\"nameField\" sm={1}>Restorano pavadinimas</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"text\" name=\"name\" id=\"nameField\" placeholder=\"Įveskite restorano pavadinimą\" onChange={(e) => setName(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"imageFile\" sm={1}>Paveikslėlis</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"file\" name=\"imageUpload\" id=\"imageField\" label=\"Choose Image\" onChange={uploadFileHandler} />\r\n                        <img src={image} style={{ maxWidth: '22rem', maxHeight: '22rem' }} />\r\n                        {loadingUpload && <LoadingBox></LoadingBox>}\r\n                        {errorUpload && (<MessageBox variant=\"danger\">{errorUpload}</MessageBox>)}\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"descriptionField\" sm={1}>Aprašymas</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"textarea\" name=\"description\" id=\"descriptionField\" placeholder=\"Įveskite aprašymą\" onChange={(e) => setDescription(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup check row>\r\n                    <Col sm={{ size: 10, offset: 1 }}>\r\n                        <Button type=\"submit\">Pridėti</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    );\r\n}","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateRestaurant, detailsRestaurant } from '../redux/actions/restaurantActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Button, Col, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport Axios from 'axios';\r\n\r\nexport default function RestaurantEditScreen(props) {\r\n\r\n    const restaurantId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const restaurantDetails = useSelector(state => state.restaurantDetails);\r\n    const { loading, error, restaurant } = restaurantDetails;\r\n\r\n    const restaurantUpdate = useSelector(state => state.restaurantUpdate);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = restaurantUpdate;\r\n\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [loadingUpload, setLoadingUpload] = useState(false);\r\n    const [errorUpload, setErrorUpload] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            props.history.push(`/restaurants/${restaurantId}`);\r\n        }\r\n        if (!restaurant || restaurant._id !== restaurantId) {\r\n            dispatch(detailsRestaurant(restaurantId));\r\n        } else {\r\n            setName(restaurant.name);\r\n            setImage(restaurant.image);\r\n            setDescription(restaurant.description);\r\n        }\r\n    }, [restaurant, dispatch, restaurantId, successUpdate, props.history]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateRestaurant({\r\n            _id: restaurantId,\r\n            name,\r\n            image,\r\n            description\r\n        }));\r\n    };\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('image', file);\r\n        setLoadingUpload(true);\r\n        try {\r\n            const { data } = await Axios.post('/api/uploads', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            });\r\n            setImage(data);\r\n            setLoadingUpload(false);\r\n        } catch (error) {\r\n            setErrorUpload(error.message);\r\n            setLoadingUpload(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <div md={{ size: 4, offset: 1 }}>\r\n            <Form onSubmit={submitHandler}>\r\n                <FormGroup row>\r\n                    <Col md={{ size: 4, offset: 1 }}>\r\n                        <Label>Redaguoti restoraną</Label>\r\n                    </Col>\r\n                </FormGroup>\r\n                {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                {loading && <LoadingBox></LoadingBox>}\r\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                <FormGroup row>\r\n                    <Label for=\"nameField\" sm={1}>Restorano pavadinimas</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input type=\"text\" name=\"name\" id=\"nameField\" placeholder=\"Įveskite restorano pavadinimą\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"imageFile\" sm={1}>Paveikslėlis</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input type=\"file\" name=\"imageUpload\" id=\"imageField\" label=\"Choose Image\" onChange={uploadFileHandler} />\r\n                        <img src={image} style={{ maxWidth: '22rem', maxHeight: '22rem' }} />\r\n                        {loadingUpload && <LoadingBox></LoadingBox>}\r\n                        {errorUpload && (<MessageBox variant=\"danger\">{errorUpload}</MessageBox>)}\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"descriptionField\" sm={1}>Aprašymas</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input type=\"textarea\" name=\"description\" id=\"descriptionField\" placeholder=\"Įveskite aprašymą\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup check row>\r\n                    <Col sm={{ size: 10, offset: 1 }}>\r\n                        <Button type=\"submit\">Atnaujinti</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    );\r\n}","import { ListGroup } from 'reactstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listMeals } from '../redux/actions/mealActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Meal from '../components/Meal';\r\nimport Search from '../components/Search';\r\n\r\nexport default function RestaurantListScreen() {\r\n\r\n    const dispatch = useDispatch();\r\n    const mealList = useSelector(state => state.mealList);\r\n    const { loading, error, meals } = mealList;\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const filterMeals = () => {\r\n        if (searchTerm === '') {\r\n            return meals;\r\n        }\r\n\r\n        return meals.filter((meal) => {\r\n            const mealName = meal.name.toLowerCase();\r\n            const termToLow = searchTerm.toLowerCase();\r\n            return mealName.includes(termToLow);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(listMeals());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<LoadingBox></LoadingBox>) :\r\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                    (\r\n                        <div>\r\n                            <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n\r\n                            <div>\r\n                                <ListGroup>\r\n                                    {filterMeals().map(meal => (\r\n                                        <Meal key={meal._id} meal={meal}></Meal>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react'\r\nimport { Card, CardBody, CardText, CardTitle, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Button } from 'reactstrap'\r\n\r\nexport default function Activity({ kcal }) {\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const [activity, setActivity] = useState('Pasirinkite veiklą');\r\n    const [weight, setWeight] = useState('');\r\n    const [minutes, setMinutes] = useState('');\r\n    const [minOrH, setMinOrH] = useState('minutes');\r\n    const toggle = () => setDropdownOpen(prevState => !prevState);\r\n\r\n    const metValues = [\r\n        {\r\n            activityName: \"Važinėdami dviračiu\",\r\n            met: 7.5\r\n        },\r\n        {\r\n            activityName: \"Begiodami\",\r\n            met: 7\r\n        },\r\n        {\r\n            activityName: \"Vaikščiodami\",\r\n            met: 3.5\r\n        },\r\n        {\r\n            activityName: \"Plaukdami\",\r\n            met: 6\r\n        }\r\n    ];\r\n    function handleClick() {\r\n        if (activity != \"Pasirinkite veiklą\" && weight != '') {\r\n            const value = metValues.filter(obj => obj.activityName === activity)[0].met;\r\n            const kcalPerMin = value * 3.5 * weight / 200;\r\n            const activityMin = Math.round(kcal / kcalPerMin);\r\n            if (activityMin >= 60) {\r\n                const hours = Math.floor(activityMin / 60);\r\n                const minutes = activityMin % 60;\r\n                if (minutes <= 9) {\r\n                    setMinutes(`${hours}:0${minutes}`);\r\n                } else {\r\n                    setMinutes(`${hours}:${minutes}`);\r\n                }\r\n                setMinOrH(\"valandų\");\r\n            } else {\r\n                setMinutes(activityMin);\r\n                setMinOrH(\"minutes\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">Sudeginkite kalorijas</CardTitle>\r\n                    {\r\n                        activity === \"Pasirinkite veiklą\" || minutes === \"\" ? (\r\n                            <CardText tag=\"h5\">Pasirinkite veiklą ir įveskite savo svorį</CardText>\r\n                        ) : (\r\n                            <CardText tag=\"h5\">{activity} {minutes} {minOrH}</CardText>\r\n                        )\r\n                    }\r\n\r\n                    <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n                        <DropdownToggle caret>\r\n                            {activity}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu onClick={(e) => setActivity(e.target.value)}>\r\n                            {/* <DropdownMenu onClick={handleClick}> */}\r\n                            <DropdownItem value=\"Važinėdami dviračiu\">Važinėdami dviračiu</DropdownItem>\r\n                            <DropdownItem value=\"Begiodami\">Begiodami</DropdownItem>\r\n                            <DropdownItem value=\"Vaikščiodami\">Vaikščiodami</DropdownItem>\r\n                            <DropdownItem value=\"Plaukdami\">Plaukdami</DropdownItem>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n\r\n                    <Input onChange={(e) => setWeight(e.target.value)} />\r\n                    <Button onClick={handleClick}>Skaičiuoti</Button>\r\n\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n","export const FAVORITE_LIST_REQUEST = 'FAVORITE_LIST_REQUEST';\r\nexport const FAVORITE_LIST_SUCCESS = 'FAVORITE_LIST_SUCCESS';\r\nexport const FAVORITE_LIST_FAIL = 'FAVORITE_LIST_FAIL';\r\n\r\nexport const FAVORITE_CREATE_REQUEST = 'FAVORITE_CREATE_REQUEST';\r\nexport const FAVORITE_CREATE_SUCCESS = 'FAVORITE_CREATE_SUCCESS';\r\nexport const FAVORITE_CREATE_FAIL = 'FAVORITE_CREATE_FAIL';\r\n\r\nexport const FAVORITE_DELETE_REQUEST = 'FAVORITE_DELETE_REQUEST';\r\nexport const FAVORITE_DELETE_SUCCESS = 'FAVORITE_DELETE_SUCCESS';\r\nexport const FAVORITE_DELETE_FAIL = 'FAVORITE_DELETE_FAIL';","import Axios from \"axios\";\r\nimport { FAVORITE_CREATE_FAIL, FAVORITE_CREATE_REQUEST, FAVORITE_CREATE_SUCCESS, FAVORITE_DELETE_FAIL, FAVORITE_DELETE_REQUEST, FAVORITE_DELETE_SUCCESS, FAVORITE_LIST_FAIL, FAVORITE_LIST_REQUEST, FAVORITE_LIST_SUCCESS } from \"../constants/favoriteConstant\";\r\n\r\nexport const listFavorites = () => async (dispatch, getState) => {\r\n    dispatch({ type: FAVORITE_LIST_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.get('/api/favorites', {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({ type: FAVORITE_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: FAVORITE_LIST_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nexport const createFavorite = (favorite) => async (dispatch, getState) => {\r\n    dispatch({ type: FAVORITE_CREATE_REQUEST, payload: { favorite } });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.post('/api/favorites', { favorite }, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({ type: FAVORITE_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({ type: FAVORITE_CREATE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const deleteFavorite = (favorite) => async (dispatch, getState) => {\r\n    dispatch({ type: FAVORITE_DELETE_REQUEST, payload: { favorite } });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        // eslint-disable-next-line no-unused-vars\r\n        // const { data } = await Axios.delete('/api/favorites', { favorite }, {\r\n        //     headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        // });\r\n        Axios.delete('/api/favorites', {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n            data: {\r\n                favorite\r\n            }\r\n        });\r\n        dispatch({ type: FAVORITE_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({ type: FAVORITE_DELETE_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport { listFavorites, createFavorite, deleteFavorite } from '../redux/actions/favoriteActions';\r\nimport LoadingBox from './LoadingBox';\r\nimport MessageBox from './MessageBox';\r\n\r\nexport default function Favorite(props) {\r\n\r\n    const { mealId } = props;\r\n    const favoriteList = useSelector(state => state.favoriteList);\r\n    const { loading, error, favorites } = favoriteList;\r\n\r\n    const [isFavorite, setFavorite] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listFavorites());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (favorites) {\r\n            if (favorites.includes(mealId))\r\n                setFavorite(true);\r\n        }\r\n    }, [favorites]);\r\n\r\n    const addFavorite = () => {\r\n        dispatch(createFavorite(mealId));\r\n        setFavorite(true);\r\n    }\r\n\r\n    const removeFavorite = () => {\r\n        dispatch(deleteFavorite(mealId));\r\n        setFavorite(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<LoadingBox></LoadingBox>) :\r\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                    (\r\n                        isFavorite ? (<Button onClick={() => removeFavorite()}>Pašalinti iš įsimintų</Button>) :\r\n                            (<Button onClick={() => addFavorite()}>Pridėti prie įsimintų</Button>)\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport { approveMeal } from '../redux/actions/mealActions';\r\nimport LoadingBox from './LoadingBox';\r\nimport MessageBox from './MessageBox';\r\n\r\nexport default function Favorite(props) {\r\n\r\n    const { mealId } = props;\r\n\r\n    const mealApprove = useSelector(state => state.mealApprove);\r\n    const { loading, success, error } = mealApprove;\r\n\r\n    const [isApproved, setApproved] = useState(props.isApproved);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const updateApproved = () => {\r\n        dispatch(approveMeal(mealId));\r\n        setApproved(!isApproved);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<LoadingBox></LoadingBox>) :\r\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                    (\r\n                        isApproved ? (<Button onClick={() => updateApproved()}>Pašalinti patvirtinimą</Button>) :\r\n                            (<Button onClick={() => updateApproved()}>Patvirtinti</Button>)\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsMeal, deleteMeal } from '../redux/actions/mealActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n// import { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Row } from 'reactstrap';\r\nimport { Button } from 'reactstrap';\r\nimport Activity from '../components/Activity';\r\nimport Favorite from '../components/Favorite';\r\nimport Approve from '../components/Approve';\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCol, MDBListGroup, MDBListGroupItem, MDBRow } from 'mdb-react-ui-kit';\r\n\r\n\r\nexport default function MealScreen(props) {\r\n    const dispatch = useDispatch();\r\n    const mealId = props.match.params.id;\r\n    const mealDetails = useSelector(state => state.mealDetails);\r\n    const { loading, error, meal } = mealDetails;\r\n\r\n    const mealDelete = useSelector(state => state.mealDelete);\r\n    const { success: successDelete } = mealDelete;\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsMeal(mealId));\r\n        if (successDelete)\r\n            props.history.push(`/mymeals/`)\r\n    }, [dispatch, mealId, successDelete]);\r\n\r\n    const deleteHandler = () => {\r\n        if (window.confirm('Ar tikrai norite pašalinti patiekalą?')) {\r\n            dispatch(deleteMeal(mealId));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<LoadingBox></LoadingBox>) :\r\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                    (\r\n                        <div>\r\n                            {\r\n                                userInfo ? (\r\n                                    <div>\r\n                                        {userInfo.isAdmin ? (\r\n                                            <div>\r\n                                                <Approve mealId={mealId} isApproved={meal.approved} />\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div></div>\r\n                                        )}\r\n                                    </div>\r\n                                ) : (\r\n                                    <div></div>\r\n                                )\r\n                            }\r\n                            {\r\n                                userInfo ? (\r\n                                    <div>\r\n                                        <Favorite mealId={mealId} />\r\n                                        {userInfo._id === meal.createdBy ? (\r\n                                            <div>\r\n                                                <Button href={`/mymeals/${meal._id}/edit`} >Redaguoti</Button>\r\n                                                <Button onClick={() => deleteHandler()}>Pašalinti</Button>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div></div>\r\n                                        )}\r\n                                    </div>\r\n                                ) : (\r\n                                    <div></div>\r\n                                )\r\n                            }\r\n                            {/* <Row>\r\n                                <Col md={{ size: 4, offset: 1 }}>\r\n                                    <Card>\r\n                                        <CardImg top width=\"100%\" src={meal.image} alt=\"failed to load photo :/\" />\r\n                                        <CardBody>\r\n                                            <CardTitle tag=\"h5\">{meal.name}</CardTitle>\r\n                                            <CardText tag=\"h6\">Kcal: {meal.kcal}</CardText>\r\n                                            <CardText tag=\"h6\">Protein:  {meal.protein}</CardText>\r\n                                            <CardText tag=\"h6\">Fat: {meal.fat}</CardText>\r\n                                            <CardText tag=\"h6\">Carbs: {meal.carbohydrates}</CardText>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                                <Col md={{ size: 4, offset: 1 }}>\r\n                                    <Activity kcal={meal.kcal} />\r\n                                </Col>\r\n                            </Row> */}\r\n                            <MDBRow center className='row-cols-1 row-cols-md-3 g-4'>\r\n                                <MDBCol>\r\n                                    <MDBCard style={{ width: '30rem' }}>\r\n                                        <MDBCardImage position='top' src={meal.image} alt=\"failed to load photo :/\" style={{ maxWidth: '30rem', maxHeight: '30rem' }} />\r\n                                        <MDBCardBody>\r\n                                            <MDBCardTitle>{meal.name}</MDBCardTitle>\r\n                                        </MDBCardBody>\r\n                                        <MDBListGroup flush>\r\n                                            <MDBListGroupItem>Kalorijos:  {meal.kcal}</MDBListGroupItem>\r\n                                            <MDBListGroupItem>Baltymai: {meal.protein}</MDBListGroupItem>\r\n                                            <MDBListGroupItem>Riebalai: {meal.fat}</MDBListGroupItem>\r\n                                            <MDBListGroupItem>Angliavandeniai: {meal.carbohydrates}</MDBListGroupItem>\r\n                                        </MDBListGroup>\r\n                                    </MDBCard>\r\n                                </MDBCol>\r\n                                <MDBCol>\r\n                                    <Activity kcal={meal.kcal} />\r\n                                </MDBCol>\r\n                            </MDBRow>\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    );\r\n}\r\n\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createMeal } from '../redux/actions/mealActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Button, Col, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { listRestaurants } from '../redux/actions/restaurantActions';\r\nimport Axios from 'axios';\r\n\r\nexport default function MealCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [restaurant_id, setRestaurantId] = useState('');\r\n    const [kcal, setKcal] = useState('');\r\n    const [protein, setProtein] = useState('');\r\n    const [fat, setFat] = useState('');\r\n    const [carbohydrates, setCarbohydrates] = useState('');\r\n    const [servingWeight, setServingWeight] = useState('');\r\n    const [image, setImage] = useState('');\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const mealCreate = useSelector((state) => state.mealCreate);\r\n    const { success, error, loading } = mealCreate;\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const restaurantList = useSelector(state => state.restaurantList);\r\n    const { loading: loadingList, error: errorList, restaurants } = restaurantList;\r\n\r\n    const [loadingUpload, setLoadingUpload] = useState(false);\r\n    const [errorUpload, setErrorUpload] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(listRestaurants());\r\n        if (success) {\r\n            props.history.push('/mymeals');\r\n        }\r\n    }, [dispatch, success]);\r\n\r\n    const createHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createMeal(name, restaurant_id, kcal, protein, fat, carbohydrates, servingWeight, userInfo._id, image));\r\n    };\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('image', file);\r\n        setLoadingUpload(true);\r\n        try {\r\n            const { data } = await Axios.post('/api/uploads', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            });\r\n            setImage(data);\r\n            setLoadingUpload(false);\r\n        } catch (error) {\r\n            setErrorUpload(error.message);\r\n            setLoadingUpload(false);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div md={{ size: 4, offset: 1 }}>\r\n            <Form onSubmit={createHandler}>\r\n                <FormGroup row>\r\n                    <Col md={{ size: 4, offset: 1 }}>\r\n                        <Label>Pridėti naują patiekalą</Label>\r\n                    </Col>\r\n                </FormGroup>\r\n                {loading && <LoadingBox></LoadingBox>}\r\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                <FormGroup row>\r\n                    <Label for=\"nameField\" sm={1}>Patiekalo pavadinimas</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"text\" name=\"name\" id=\"nameField\" placeholder=\"Įveskite patiekalo pavadinimą\" onChange={(e) => setName(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"restaurantSelect\" sm={1}>Restoranas</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        {loadingList ? (<LoadingBox></LoadingBox>) :\r\n                            errorList ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                                (\r\n                                    <Input type=\"select\" name=\"select\" id=\"restaurantSelect\" onClick={(e) => setRestaurantId(e.target.value)}>\r\n                                        <option>-Pasirinkite restoraną-</option>\r\n                                        {restaurants.map(restaurant => (\r\n                                            <option key={restaurant._id} value={restaurant._id}>{restaurant.name}</option>\r\n                                        ))}\r\n                                    </Input>\r\n                                )}\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"kcalField\" sm={1}>Kalorijos</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"number\" name=\"kcal\" id=\"kcalField\" placeholder=\"Įveskite kalorijas\" onChange={(e) => setKcal(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"proteinField\" sm={1}>Baltymai</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"number\" step=\"0.1\" name=\"protein\" id=\"proteinField\" placeholder=\"Įveskite baltymų kiekį\" onChange={(e) => setProtein(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"fatField\" sm={1}>Riebalai</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"number\" step=\"0.1\" name=\"fat\" id=\"fatField\" placeholder=\"Įveskite riebalų kiekį\" onChange={(e) => setFat(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"carbohydratesField\" sm={1}>Angliavandeniai</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"number\" step=\"0.1\" name=\"carbohydrates\" id=\"carbohydratesField\" placeholder=\"Įveskite angliavandenių kiekį\" onChange={(e) => setCarbohydrates(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"servingWeightField\" sm={1}>Porcijos svoris</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"number\" name=\"servingWeight\" id=\"servingWeightField\" placeholder=\"Įveskite procijos svorį\" onChange={(e) => setServingWeight(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"imageFile\" sm={1}>Paveikslėlis</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"file\" name=\"imageUpload\" id=\"imageField\" label=\"Choose Image\" onChange={uploadFileHandler} />\r\n                        <img src={image} style={{ maxWidth: '22rem', maxHeight: '22rem' }} />\r\n                        {loadingUpload && <LoadingBox></LoadingBox>}\r\n                        {errorUpload && (<MessageBox variant=\"danger\">{errorUpload}</MessageBox>)}\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup check row>\r\n                    <Col sm={{ size: 10, offset: 1 }}>\r\n                        <Button type=\"submit\">Pridėti</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    );\r\n}","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateMeal, detailsMeal } from '../redux/actions/mealActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Button, Col, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { listRestaurants } from '../redux/actions/restaurantActions';\r\nimport Axios from 'axios';\r\n\r\nexport default function MealEditScreen(props) {\r\n\r\n    const mealId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [restaurant_id, setRestaurantId] = useState('');\r\n    const [kcal, setKcal] = useState('');\r\n    const [protein, setProtein] = useState('');\r\n    const [fat, setFat] = useState('');\r\n    const [carbohydrates, setCarbohydrates] = useState('');\r\n    const [servingWeight, setServingWeight] = useState('');\r\n    const [image, setImage] = useState('');\r\n\r\n    const mealDetails = useSelector((state) => state.mealDetails);\r\n    const { loading, error, meal } = mealDetails;\r\n\r\n    const mealUpdate = useSelector(state => state.mealUpdate);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = mealUpdate;\r\n\r\n    const restaurantList = useSelector(state => state.restaurantList);\r\n    const { loading: loadingList, error: errorList, restaurants } = restaurantList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listRestaurants());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            props.history.push(`/meals/${mealId}`);\r\n        }\r\n        if (!meal || meal._id !== mealId) {\r\n            dispatch(detailsMeal(mealId));\r\n        } else {\r\n            setName(meal.name);\r\n            setRestaurantId(meal.restaurant_id);\r\n            setKcal(meal.kcal);\r\n            setProtein(meal.protein);\r\n            setFat(meal.fat);\r\n            setCarbohydrates(meal.carbohydrates);\r\n            setServingWeight(meal.servingWeight);\r\n            setImage(meal.image);\r\n        }\r\n    }, [meal, dispatch, mealId, successUpdate, props.history]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateMeal({\r\n            _id: mealId,\r\n            name,\r\n            restaurant_id,\r\n            kcal,\r\n            protein,\r\n            fat,\r\n            carbohydrates,\r\n            servingWeight,\r\n            image\r\n        })\r\n        );\r\n    };\r\n\r\n    const [loadingUpload, setLoadingUpload] = useState(false);\r\n    const [errorUpload, setErrorUpload] = useState('');\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('image', file);\r\n        setLoadingUpload(true);\r\n        try {\r\n            const { data } = await Axios.post('/api/uploads', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            });\r\n            setImage(data);\r\n            setLoadingUpload(false);\r\n        } catch (error) {\r\n            setErrorUpload(error.message);\r\n            setLoadingUpload(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n\r\n        <div md={{ size: 4, offset: 1 }}>\r\n            <Form onSubmit={submitHandler}>\r\n                <FormGroup row>\r\n                    <Col md={{ size: 4, offset: 1 }}>\r\n                        <Label>Redaguoti patiekalą</Label>\r\n                    </Col>\r\n                </FormGroup>\r\n                {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n                {loading && <LoadingBox></LoadingBox>}\r\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                <FormGroup row>\r\n                    <Label for=\"nameField\" sm={1}>Patiekalo pavadinimas</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input type=\"text\" name=\"name\" id=\"nameField\" placeholder=\"Įveskite patiekalo pavadinimą\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"restaurantSelect\" sm={1}>Restoranas</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        {loadingList ? (<LoadingBox></LoadingBox>) :\r\n                            errorList ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                                (\r\n                                    <Input type=\"select\" name=\"select\" id=\"restaurantSelect\" value={restaurant_id} onClick={(e) => setRestaurantId(e.target.value)}>\r\n                                        <option>-Pasirinkite restoraną-</option>\r\n                                        {restaurants.map(restaurant => (\r\n                                            <option key={restaurant._id} value={restaurant._id}>{restaurant.name}</option>\r\n                                        ))}\r\n                                    </Input>\r\n                                )}\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"kcalField\" sm={1}>Kalorijos</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input type=\"number\" name=\"kcal\" id=\"kcalField\" placeholder=\"Įveskite kalorijas\" value={kcal} onChange={(e) => setKcal(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"proteinField\" sm={1}>Baltymai</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input type=\"number\" step=\"0.1\" name=\"protein\" id=\"proteinField\" placeholder=\"Įveskite baltymų kiekį\" value={protein} onChange={(e) => setProtein(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"fatField\" sm={1}>Riebalai</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input type=\"number\" step=\"0.1\" name=\"fat\" id=\"fatField\" placeholder=\"Įveskite riebalų kiekį\" value={fat} onChange={(e) => setFat(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"carbohydratesField\" sm={1}>Angliavandeniai</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input type=\"number\" step=\"0.1\" name=\"carbohydrates\" id=\"carbohydratesField\" placeholder=\"Įveskite angliavandenių kiekį\" value={carbohydrates} onChange={(e) => setCarbohydrates(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"servingWeightField\" sm={1}>Porcijos svoris</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input type=\"number\" name=\"servingWeight\" id=\"servingWeightField\" placeholder=\"Įveskite procijos svorį\" value={servingWeight} onChange={(e) => setServingWeight(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"imageFile\" sm={1}>Paveikslėlis</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input type=\"file\" name=\"imageUpload\" id=\"imageField\" label=\"Choose Image\" onChange={uploadFileHandler} />\r\n                        <img src={image} style={{ maxWidth: '22rem', maxHeight: '22rem' }} />\r\n                        {loadingUpload && <LoadingBox></LoadingBox>}\r\n                        {errorUpload && (<MessageBox variant=\"danger\">{errorUpload}</MessageBox>)}\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup check row>\r\n                    <Col sm={{ size: 10, offset: 1 }}>\r\n                        <Button type=\"submit\">Atnaujinti</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    );\r\n}","export const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\n\r\nexport const USER_SIGNIN_REQUEST = 'USER_SIGNIN_REQUEST';\r\nexport const USER_SIGNIN_SUCCESS = 'USER_SIGNIN_SUCCESS';\r\nexport const USER_SIGNIN_FAIL = 'USER_SIGNIN_FAIL';\r\n\r\nexport const USER_SIGNOUT = 'USER_SIGNOUT';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Col, Form, FormGroup, Input, Label } from 'reactstrap'\r\nimport { signin } from '../redux/actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\nexport default function LoginScreen(props) {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo, loading, error } = userSignin;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(username, password));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userInfo && error) {\r\n            props.history.push(redirect);\r\n        }\r\n    }, [props.history, redirect, userInfo]);\r\n\r\n\r\n\r\n    return (\r\n        <div md={{ size: 4, offset: 1 }}>\r\n            <Form onSubmit={submitHandler}>\r\n                <FormGroup row>\r\n                    <Col md={{ size: 4, offset: 1 }}>\r\n                        <Label>Log in</Label>\r\n                    </Col>\r\n                </FormGroup>\r\n                {loading && <LoadingBox></LoadingBox>}\r\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                <FormGroup row>\r\n                    <Label for=\"usernameField\" sm={1}>Username</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"text\" name=\"username\" id=\"usernameField\" placeholder=\"Enter your username\" onChange={(e) => setUsername(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"passwordField\" sm={1}>Password</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"password\" name=\"password\" id=\"passwordField\" placeholder=\"Enter your password\" onChange={(e) => setPassword(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup check row>\r\n                    <Col sm={{ size: 10, offset: 1 }}>\r\n                        <Button type=\"submit\">Log in</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col md={{ size: 4, offset: 1 }}>\r\n                        <Input plaintext value=\"New user?\" />\r\n                        <Link to=\"/register\">Register</Link>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import Axios from 'axios';\r\nimport { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS } from '../constants/userConstants';\r\n\r\nexport const signin = (username, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { username, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/users/signin', { username, password });\r\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({ type: USER_SIGNIN_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const register = (username, email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { username, email, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/users/register', { username, email, password });\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({ type: USER_REGISTER_FAIL, payload: error.response && error.response.data.message ? error.response.data.message : error.message });\r\n    }\r\n};\r\n\r\nexport const signout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_SIGNOUT });\r\n};\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`/api/users/${userId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` }\r\n        });\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n        dispatch({ type: USER_DETAILS_FAIL, payload: message });\r\n    }\r\n};","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Col, Form, FormGroup, Input, Label } from 'reactstrap'\r\nimport { register } from '../redux/actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport default function RegisterScreen(props) {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\r\n\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n    const { userInfo, loading, error } = userRegister;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            alert('Password and confirm password do not match');\r\n        } else {\r\n            dispatch(register(username, email, password));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            props.history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (userInfo && error) {\r\n            props.history.push(redirect);\r\n        }\r\n    }, [props.history, redirect, userInfo]);\r\n\r\n    return (\r\n        <div md={{ size: 4, offset: 1 }}>\r\n            <Form onSubmit={submitHandler}>\r\n                <FormGroup row>\r\n                    <Col md={{ size: 4, offset: 1 }}>\r\n                        <Label>Register</Label>\r\n                    </Col>\r\n                </FormGroup>\r\n                {loading && <LoadingBox></LoadingBox>}\r\n                {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                <FormGroup row>\r\n                    <Label for=\"usernameField\" sm={1}>Username</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"text\" name=\"username\" id=\"usernameField\" placeholder=\"Enter your username\" onChange={(e) => setUsername(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"emailField\" sm={1}>Email</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"text\" name=\"email\" id=\"emailField\" placeholder=\"Enter your email\" onChange={(e) => setEmail(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"passwordField\" sm={1}>Password</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"password\" name=\"password\" id=\"passwordField\" placeholder=\"Enter your password\" onChange={(e) => setPassword(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label for=\"confirmPasswordField\" sm={1}>Confirm Password</Label>\r\n                    <Col md={{ size: 4 }}>\r\n                        <Input required type=\"password\" name=\"password\" id=\"confirmPasswordField\" placeholder=\"Enter your password\" onChange={(e) => setConfirmPassword(e.target.value)} />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup check row>\r\n                    <Col sm={{ size: 10, offset: 1 }}>\r\n                        <Button type=\"submit\">Register</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Col md={{ size: 4, offset: 1 }}>\r\n                        <Label>Have account?</Label>\r\n                        <Link to=\"/signin\"> Log in</Link>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { Button, ListGroup } from 'reactstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listMeals } from '../redux/actions/mealActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Meal from '../components/Meal';\r\nimport Search from '../components/Search';\r\n\r\nexport default function UserMealScreen() {\r\n\r\n    const dispatch = useDispatch();\r\n    const mealList = useSelector(state => state.mealList);\r\n    const { loading, error, meals } = mealList;\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const filterUserMeals = () => {\r\n        return meals.filter(meal => meal.createdBy === userInfo._id);\r\n    };\r\n\r\n    const filterMeals = () => {\r\n        console.log(\"users meals:\", filterUserMeals());\r\n        if (searchTerm === '') {\r\n            return filterUserMeals();\r\n        }\r\n\r\n        return filterUserMeals().filter((meal) => {\r\n            const mealName = meal.name.toLowerCase();\r\n            return mealName.includes(searchTerm);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(listMeals());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<LoadingBox></LoadingBox>) :\r\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                    (\r\n                        <div>\r\n                            <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n                            <Button href=\"/mymeals/add\">Add meal</Button>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    {filterMeals().map(meal => (\r\n                                        <Meal key={meal._id} meal={meal}></Meal>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    );\r\n}\r\n","import { ListGroup } from 'reactstrap';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listMeals } from '../redux/actions/mealActions';\r\nimport { listFavorites } from '../redux/actions/favoriteActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Meal from '../components/Meal';\r\nimport Search from '../components/Search';\r\n\r\nexport default function FavoriteScreen() {\r\n\r\n    const dispatch = useDispatch();\r\n    const mealList = useSelector(state => state.mealList);\r\n    const { loading, error, meals } = mealList;\r\n\r\n    const favoriteList = useSelector(state => state.favoriteList);\r\n    const { loading: loadingList, error: errorList, favorites } = favoriteList;\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const filterFavoriteMeals = () => {\r\n        return meals.filter(meal => favorites.includes(meal._id));\r\n    };\r\n\r\n    const filterMeals = () => {\r\n        console.log(\"favorite meals:\", filterFavoriteMeals());\r\n        if (searchTerm === '') {\r\n            return filterFavoriteMeals();\r\n        }\r\n\r\n        return filterFavoriteMeals().filter((meal) => {\r\n            const mealName = meal.name.toLowerCase();\r\n            return mealName.includes(searchTerm);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(listMeals());\r\n        dispatch(listFavorites());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (<LoadingBox></LoadingBox>) :\r\n                error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                    loadingList ? (<LoadingBox></LoadingBox>) :\r\n                        errorList ? (<MessageBox variant=\"danger\">{errorList}</MessageBox>) :\r\n                            (\r\n                                <div>\r\n                                    <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n                                    <div>\r\n                                        <ListGroup>\r\n                                            {filterMeals().map(meal => (\r\n                                                <Meal key={meal._id} meal={meal}></Meal>\r\n                                            ))}\r\n                                        </ListGroup>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    return (\r\n        <Route {...rest} render={(props) => userInfo ? (<Component {...props}></Component>) :\r\n            (\r\n                <Redirect to=\"/signin\" />\r\n            )\r\n        }>\r\n        </Route>\r\n    );\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport default function PublicRoute({ component: Component, ...rest }) {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    return (\r\n        <Route {...rest} render={(props) => !userInfo ? (<Component {...props}></Component>) :\r\n            (\r\n                <Redirect to=\"/\" />\r\n            )\r\n        }>\r\n        </Route>\r\n    );\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport default function AdminRoute({ component: Component, ...rest }) {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    return (\r\n        <Route {...rest} render={(props) => userInfo && userInfo.isAdmin ? (<Component {...props}></Component>) :\r\n            (\r\n                <Redirect to=\"/signin\" />\r\n            )\r\n        }>\r\n        </Route>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signout } from '../redux/actions/userActions';\r\nimport {\r\n    MDBNavbar,\r\n    MDBNavbarNav,\r\n    MDBNavbarItem,\r\n    MDBNavbarLink,\r\n    MDBContainer,\r\n    MDBIcon,\r\n    MDBNavbarBrand\r\n} from 'mdb-react-ui-kit';\r\nimport { Collapse, NavbarToggler } from 'reactstrap';\r\n\r\nexport default function App() {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    const dispatch = useDispatch();\r\n    const signoutHandler = () => {\r\n        dispatch(signout());\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <MDBNavbar expand='lg' light bgColor='white'>\r\n                <MDBContainer fluid>\r\n                    <MDBNavbarBrand href=\"/\">\r\n                        <MDBIcon className='ms-1' icon='utensils' size='lg' />\r\n                    </MDBNavbarBrand>\r\n                    <NavbarToggler onClick={toggle} />\r\n                    <Collapse isOpen={isOpen} navbar>\r\n                        <MDBNavbarNav right className='mb-2 mb-lg-0'>\r\n                            <MDBNavbarItem active>\r\n                                <MDBNavbarLink aria-current='page' href='/restaurants'>\r\n                                    Restoranai\r\n                                </MDBNavbarLink>\r\n                            </MDBNavbarItem>\r\n                            <MDBNavbarItem>\r\n                                <MDBNavbarLink href='/meals'>Patiekalai</MDBNavbarLink>\r\n                            </MDBNavbarItem>\r\n                            <MDBNavbarItem>\r\n                                {\r\n                                    userInfo ? (\r\n                                        <div>\r\n                                            <MDBNavbarItem>\r\n                                                <MDBNavbarLink href=\"/favorites\">Įsiminti</MDBNavbarLink>\r\n                                            </MDBNavbarItem>\r\n                                            <MDBNavbarItem>\r\n                                                <MDBNavbarLink href=\"/mymeals\">Mano patiekalai</MDBNavbarLink>\r\n                                            </MDBNavbarItem>\r\n                                            <MDBNavbarItem>\r\n                                                <h1>{userInfo.name}</h1>\r\n                                            </MDBNavbarItem>\r\n                                            <MDBNavbarLink aria-current='page' href='#signout' onClick={signoutHandler}>\r\n                                                <MDBIcon className='ms-1' icon='sign-out-alt' size='lg' />\r\n                                            </MDBNavbarLink>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div>\r\n                                            <MDBNavbarLink className=\"ml-auto p-2 col-example\" aria-current='page' href='/signin'>\r\n                                                <MDBIcon className='ms-1' icon='sign-in-alt' size='lg' />\r\n                                            </MDBNavbarLink>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </MDBNavbarItem>\r\n                        </MDBNavbarNav>\r\n                    </Collapse>\r\n                </MDBContainer>\r\n            </MDBNavbar>\r\n        </header>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\n// import Header from './components/Header';\r\n\r\nimport RestaurantListScreen from './screens/RestaurantListScreen';\r\nimport RestaurantScreen from './screens/RestaurantScreen';\r\nimport RestaurantCreateScreen from './screens/RestaurantCreateScreen';\r\nimport RestaurantEditScreen from './screens/RestaurantEditScreen';\r\n\r\nimport MealListScreen from './screens/MealListScreen';\r\nimport MealScreen from './screens/MealScreen';\r\nimport MealCreateScreen from './screens/MealCreateScreen';\r\nimport MealEditScreen from './screens/MealEditScreen';\r\n\r\nimport SigninScreen from './screens/SigninScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\n\r\nimport UserMealScreen from './screens/UserMealScreen';\r\nimport FavoritesScreen from './screens/FavoritesScreen';\r\n\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\nimport AdminRoute from './components/AdminRoute';\r\n\r\n\r\nimport HeaderMDB from './components/HeaderMDB';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Header /> */}\r\n      <HeaderMDB />\r\n      <BrowserRouter>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={RestaurantListScreen}></Route>\r\n            <Route exact path=\"/restaurants\" component={RestaurantListScreen}></Route>\r\n            <AdminRoute exact path=\"/restaurants/add\" component={RestaurantCreateScreen}></AdminRoute>\r\n            <Route exact path=\"/restaurants/:id\" component={RestaurantScreen}></Route>\r\n            <AdminRoute exact path=\"/restaurants/:id/edit\" component={RestaurantEditScreen}></AdminRoute>\r\n            <Route exact path=\"/meals\" component={MealListScreen}></Route>\r\n            <Route exact path=\"/meals/:id\" component={MealScreen}></Route>\r\n            <PublicRoute exact path=\"/signin\" component={SigninScreen}></PublicRoute>\r\n            <PublicRoute exact path=\"/register\" component={RegisterScreen}></PublicRoute>\r\n            <PrivateRoute exact path=\"/favorites\" component={FavoritesScreen}></PrivateRoute>\r\n            <PrivateRoute exact path=\"/mymeals\" component={UserMealScreen}></PrivateRoute>\r\n            <PrivateRoute exact path=\"/mymeals/add\" component={MealCreateScreen}></PrivateRoute>\r\n            <PrivateRoute exact path=\"/mymeals/:id/edit\" component={MealEditScreen}></PrivateRoute>\r\n\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport { mealListReducer, mealDetailsReducer, mealCreateReducer, mealUpdateReducer, mealDeleteReducer, mealApproveReducer } from './reducers/mealReducers';\nimport { restaurantListReducer, restaurantDetailsReducer, restaurantCreateReducer, restaurantUpdateReducer, restaurantDeleteReducer } from './reducers/restaurantReducers';\nimport { userDetailsReducer, userRegisterReducer, userSigninReducer } from './reducers/userReducers'\nimport { favoriteCreateReducer, favoriteDeleteReducer, favoriteListReducer } from './reducers/favoriteReducers';\n\n//pridet authentikacija\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  }\n};\n\nconst reducer = combineReducers({\n  mealList: mealListReducer,\n  mealDetails: mealDetailsReducer,\n  mealCreate: mealCreateReducer,\n  mealUpdate: mealUpdateReducer,\n  mealDelete: mealDeleteReducer,\n  mealApprove: mealApproveReducer,\n\n  restaurantList: restaurantListReducer,\n  restaurantDetails: restaurantDetailsReducer,\n  restaurantCreate: restaurantCreateReducer,\n  restaurantUpdate: restaurantUpdateReducer,\n  restaurantDelete: restaurantDeleteReducer,\n\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n\n  favoriteList: favoriteListReducer,\n  favoriteCreate: favoriteCreateReducer,\n  favoriteDelete: favoriteDeleteReducer\n\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;\n","import { MEAL_APPROVE_FAIL, MEAL_APPROVE_REQUEST, MEAL_APPROVE_SUCCESS, MEAL_CREATE_FAIL, MEAL_CREATE_REQUEST, MEAL_CREATE_RESET, MEAL_CREATE_SUCCESS, MEAL_DELETE_FAIL, MEAL_DELETE_REQUEST, MEAL_DELETE_RESET, MEAL_DELETE_SUCCESS, MEAL_DETAILS_FAIL, MEAL_DETAILS_REQUEST, MEAL_DETAILS_SUCCESS, MEAL_LIST_FAIL, MEAL_LIST_REQUEST, MEAL_LIST_SUCCESS, MEAL_UPDATE_FAIL, MEAL_UPDATE_REQUEST, MEAL_UPDATE_RESET, MEAL_UPDATE_SUCCESS } from '../constants/mealConstants';\r\n\r\nexport const mealListReducer = (state = { loading: true, meals: [] }, action) => {\r\n    switch (action.type) {\r\n        case MEAL_LIST_REQUEST:\r\n            return { loading: true };\r\n        case MEAL_LIST_SUCCESS:\r\n            return { loading: false, meals: action.payload };\r\n        case MEAL_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const mealDetailsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case MEAL_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case MEAL_DETAILS_SUCCESS:\r\n            return { loading: false, meal: action.payload };\r\n        case MEAL_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const mealCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case MEAL_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case MEAL_CREATE_SUCCESS:\r\n            return { loading: false, success: true, meal: action.payload };\r\n        case MEAL_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case MEAL_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const mealUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case MEAL_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case MEAL_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case MEAL_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case MEAL_UPDATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const mealDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case MEAL_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case MEAL_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case MEAL_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case MEAL_DELETE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const mealApproveReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case MEAL_APPROVE_REQUEST:\r\n            return { loading: true };\r\n        case MEAL_APPROVE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case MEAL_APPROVE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { RESTAURANT_CREATE_FAIL, RESTAURANT_CREATE_REQUEST, RESTAURANT_CREATE_RESET, RESTAURANT_CREATE_SUCCESS, RESTAURANT_DELETE_FAIL, RESTAURANT_DELETE_REQUEST, RESTAURANT_DELETE_RESET, RESTAURANT_DELETE_SUCCESS, RESTAURANT_DETAILS_FAIL, RESTAURANT_DETAILS_REQUEST, RESTAURANT_DETAILS_SUCCESS, RESTAURANT_LIST_FAIL, RESTAURANT_LIST_REQUEST, RESTAURANT_LIST_SUCCESS, RESTAURANT_UPDATE_FAIL, RESTAURANT_UPDATE_REQUEST, RESTAURANT_UPDATE_RESET, RESTAURANT_UPDATE_SUCCESS } from '../constants/restaurantConstants';\r\n\r\nexport const restaurantListReducer = (state = { loading: true, restaurants: [] }, action) => {\r\n    switch (action.type) {\r\n        case RESTAURANT_LIST_REQUEST:\r\n            return { loading: true };\r\n        case RESTAURANT_LIST_SUCCESS:\r\n            return { loading: false, restaurants: action.payload };\r\n        case RESTAURANT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const restaurantDetailsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case RESTAURANT_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case RESTAURANT_DETAILS_SUCCESS:\r\n            return { loading: false, restaurant: action.payload };\r\n        case RESTAURANT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const restaurantCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RESTAURANT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case RESTAURANT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, restaurant: action.payload };\r\n        case RESTAURANT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case RESTAURANT_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const restaurantUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RESTAURANT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case RESTAURANT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case RESTAURANT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case RESTAURANT_UPDATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const restaurantDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case RESTAURANT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case RESTAURANT_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case RESTAURANT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case RESTAURANT_DELETE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};","import { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_SUCCESS } from '../constants/userConstants';\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userSigninReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGNIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGNIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_SIGNIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_SIGNOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { FAVORITE_CREATE_FAIL, FAVORITE_CREATE_REQUEST, FAVORITE_CREATE_SUCCESS, FAVORITE_DELETE_FAIL, FAVORITE_DELETE_REQUEST, FAVORITE_DELETE_SUCCESS, FAVORITE_LIST_FAIL, FAVORITE_LIST_REQUEST, FAVORITE_LIST_SUCCESS } from \"../constants/favoriteConstant\";\r\n\r\nexport const favoriteListReducer = (state = { loading: true, favorites: [] }, action) => {\r\n    switch (action.type) {\r\n        case FAVORITE_LIST_REQUEST:\r\n            return { loading: true };\r\n        case FAVORITE_LIST_SUCCESS:\r\n            return { loading: false, favorites: action.payload };\r\n        case FAVORITE_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const favoriteCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FAVORITE_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case FAVORITE_CREATE_SUCCESS:\r\n            return { loading: false, success: true, favorite: action.payload };\r\n        case FAVORITE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const favoriteDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FAVORITE_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case FAVORITE_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case FAVORITE_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\n// import '@fortawesome/fontawesome-free/css/all.min.css';\r\n// import 'bootstrap-css-only/css/bootstrap.min.css';\r\n// import 'mdbreact/dist/css/mdb.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}